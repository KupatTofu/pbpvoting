{
  "version": 3,
  "sources": ["../../hono/dist/jsx/components.js", "../../hono/dist/jsx/streaming.js", "../../hono/dist/jsx/index.js"],
  "sourcesContent": ["// src/jsx/components.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"../utils/html.js\";\nimport { DOM_RENDERER } from \"./constants.js\";\nimport { ErrorBoundary as ErrorBoundaryDomRenderer } from \"./dom/components.js\";\nvar errorBoundaryCounter = 0;\nvar childrenToString = async (children) => {\n  try {\n    return children.flat().map((c) => c == null || typeof c === \"boolean\" ? \"\" : c.toString());\n  } catch (e) {\n    if (e instanceof Promise) {\n      await e;\n      return childrenToString(children);\n    } else {\n      throw e;\n    }\n  }\n};\nvar ErrorBoundary = async ({ children, fallback, fallbackRender, onError }) => {\n  if (!children) {\n    return raw(\"\");\n  }\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n  let fallbackStr;\n  const fallbackRes = (error) => {\n    onError?.(error);\n    return (fallbackStr || fallbackRender?.(error) || \"\").toString();\n  };\n  let resArray = [];\n  try {\n    resArray = children.map(\n      (c) => c == null || typeof c === \"boolean\" ? \"\" : c.toString()\n    );\n  } catch (e) {\n    fallbackStr = await fallback?.toString();\n    if (e instanceof Promise) {\n      resArray = [\n        e.then(() => childrenToString(children)).catch((e2) => fallbackRes(e2))\n      ];\n    } else {\n      resArray = [fallbackRes(e)];\n    }\n  }\n  if (resArray.some((res) => res instanceof Promise)) {\n    fallbackStr ||= await fallback?.toString();\n    const index = errorBoundaryCounter++;\n    const replaceRe = RegExp(`(<template id=\"E:${index}\"></template>.*?)(.*?)(<!--E:${index}-->)`);\n    const caught = false;\n    const catchCallback = ({ error: error2, buffer }) => {\n      if (caught) {\n        return \"\";\n      }\n      const fallbackResString = fallbackRes(error2);\n      if (buffer) {\n        buffer[0] = buffer[0].replace(replaceRe, fallbackResString);\n      }\n      return buffer ? \"\" : `<template data-hono-target=\"E:${index}\">${fallbackResString}</template><script>\n((d,c,n) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('E:${index}')\nif(!d)return\ndo{n=d.nextSibling;n.remove()}while(n.nodeType!=8||n.nodeValue!='E:${index}')\nd.replaceWith(c.content)\n})(document)\n<\\/script>`;\n    };\n    let error;\n    const promiseAll = Promise.all(resArray).catch((e) => error = e);\n    return raw(`<template id=\"E:${index}\"></template><!--E:${index}-->`, [\n      ({ phase, buffer, context }) => {\n        if (phase === HtmlEscapedCallbackPhase.BeforeStream) {\n          return;\n        }\n        return promiseAll.then(async (htmlArray) => {\n          if (error) {\n            throw error;\n          }\n          htmlArray = htmlArray.flat();\n          const content = htmlArray.join(\"\");\n          let html = buffer ? \"\" : `<template data-hono-target=\"E:${index}\">${content}</template><script>\n((d,c) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('E:${index}')\nif(!d)return\nd.parentElement.insertBefore(c.content,d.nextSibling)\n})(document)\n<\\/script>`;\n          if (htmlArray.every((html2) => !html2.callbacks?.length)) {\n            if (buffer) {\n              buffer[0] = buffer[0].replace(replaceRe, content);\n            }\n            return html;\n          }\n          if (buffer) {\n            buffer[0] = buffer[0].replace(\n              replaceRe,\n              (_all, pre, _, post) => `${pre}${content}${post}`\n            );\n          }\n          const callbacks = htmlArray.map((html2) => html2.callbacks || []).flat();\n          if (phase === HtmlEscapedCallbackPhase.Stream) {\n            html = await resolveCallback(\n              html,\n              HtmlEscapedCallbackPhase.BeforeStream,\n              true,\n              context\n            );\n          }\n          let resolvedCount = 0;\n          const promises = callbacks.map(\n            (c) => (...args) => c(...args)?.then((content2) => {\n              resolvedCount++;\n              if (buffer) {\n                if (resolvedCount === callbacks.length) {\n                  buffer[0] = buffer[0].replace(replaceRe, (_all, _pre, content3) => content3);\n                }\n                buffer[0] += content2;\n                return raw(\"\", content2.callbacks);\n              }\n              return raw(\n                content2 + (resolvedCount !== callbacks.length ? \"\" : `<script>\n((d,c,n) => {\nd=d.getElementById('E:${index}')\nif(!d)return\nn=d.nextSibling\nwhile(n.nodeType!=8||n.nodeValue!='E:${index}'){n=n.nextSibling}\nn.remove()\nd.remove()\n})(document)\n<\\/script>`),\n                content2.callbacks\n              );\n            }).catch((error2) => catchCallback({ error: error2, buffer }))\n          );\n          return raw(html, promises);\n        }).catch((error2) => catchCallback({ error: error2, buffer }));\n      }\n    ]);\n  } else {\n    return raw(resArray.join(\"\"));\n  }\n};\nErrorBoundary[DOM_RENDERER] = ErrorBoundaryDomRenderer;\nexport {\n  ErrorBoundary,\n  childrenToString\n};\n", "// src/jsx/streaming.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"../utils/html.js\";\nimport { JSXNode } from \"./base.js\";\nimport { childrenToString } from \"./components.js\";\nimport { DOM_RENDERER, DOM_STASH } from \"./constants.js\";\nimport { Suspense as SuspenseDomRenderer } from \"./dom/components.js\";\nimport { buildDataStack } from \"./dom/render.js\";\nvar suspenseCounter = 0;\nvar Suspense = async ({\n  children,\n  fallback\n}) => {\n  if (!children) {\n    return fallback.toString();\n  }\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n  let resArray = [];\n  const stackNode = { [DOM_STASH]: [0, []] };\n  const popNodeStack = (value) => {\n    buildDataStack.pop();\n    return value;\n  };\n  try {\n    stackNode[DOM_STASH][0] = 0;\n    buildDataStack.push([[], stackNode]);\n    resArray = children.map(\n      (c) => c == null || typeof c === \"boolean\" ? \"\" : c.toString()\n    );\n  } catch (e) {\n    if (e instanceof Promise) {\n      resArray = [\n        e.then(() => {\n          stackNode[DOM_STASH][0] = 0;\n          buildDataStack.push([[], stackNode]);\n          return childrenToString(children).then(popNodeStack);\n        })\n      ];\n    } else {\n      throw e;\n    }\n  } finally {\n    popNodeStack();\n  }\n  if (resArray.some((res) => res instanceof Promise)) {\n    const index = suspenseCounter++;\n    const fallbackStr = await fallback.toString();\n    return raw(`<template id=\"H:${index}\"></template>${fallbackStr}<!--/$-->`, [\n      ...fallbackStr.callbacks || [],\n      ({ phase, buffer, context }) => {\n        if (phase === HtmlEscapedCallbackPhase.BeforeStream) {\n          return;\n        }\n        return Promise.all(resArray).then(async (htmlArray) => {\n          htmlArray = htmlArray.flat();\n          const content = htmlArray.join(\"\");\n          if (buffer) {\n            buffer[0] = buffer[0].replace(\n              new RegExp(`<template id=\"H:${index}\"></template>.*?<!--/\\\\$-->`),\n              content\n            );\n          }\n          let html = buffer ? \"\" : `<template data-hono-target=\"H:${index}\">${content}</template><script>\n((d,c,n) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('H:${index}')\nif(!d)return\ndo{n=d.nextSibling;n.remove()}while(n.nodeType!=8||n.nodeValue!='/$')\nd.replaceWith(c.content)\n})(document)\n<\\/script>`;\n          const callbacks = htmlArray.map((html2) => html2.callbacks || []).flat();\n          if (!callbacks.length) {\n            return html;\n          }\n          if (phase === HtmlEscapedCallbackPhase.Stream) {\n            html = await resolveCallback(html, HtmlEscapedCallbackPhase.BeforeStream, true, context);\n          }\n          return raw(html, callbacks);\n        });\n      }\n    ]);\n  } else {\n    return raw(resArray.join(\"\"));\n  }\n};\nSuspense[DOM_RENDERER] = SuspenseDomRenderer;\nvar textEncoder = new TextEncoder();\nvar renderToReadableStream = (content, onError = console.trace) => {\n  const reader = new ReadableStream({\n    async start(controller) {\n      try {\n        if (content instanceof JSXNode) {\n          content = content.toString();\n        }\n        const context = typeof content === \"object\" ? content : {};\n        const resolved = await resolveCallback(\n          content,\n          HtmlEscapedCallbackPhase.BeforeStream,\n          true,\n          context\n        );\n        controller.enqueue(textEncoder.encode(resolved));\n        let resolvedCount = 0;\n        const callbacks = [];\n        const then = (promise) => {\n          callbacks.push(\n            promise.catch((err) => {\n              console.log(err);\n              onError(err);\n              return \"\";\n            }).then(async (res) => {\n              res = await resolveCallback(\n                res,\n                HtmlEscapedCallbackPhase.BeforeStream,\n                true,\n                context\n              );\n              res.callbacks?.map((c) => c({ phase: HtmlEscapedCallbackPhase.Stream, context })).filter(Boolean).forEach(then);\n              resolvedCount++;\n              controller.enqueue(textEncoder.encode(res));\n            })\n          );\n        };\n        resolved.callbacks?.map((c) => c({ phase: HtmlEscapedCallbackPhase.Stream, context })).filter(Boolean).forEach(then);\n        while (resolvedCount !== callbacks.length) {\n          await Promise.all(callbacks);\n        }\n      } catch (e) {\n        onError(e);\n      }\n      controller.close();\n    }\n  });\n  return reader;\n};\nexport {\n  Suspense,\n  renderToReadableStream\n};\n", "// src/jsx/index.ts\nimport { Fragment, cloneElement, isValidElement, jsx, memo, reactAPICompatVersion } from \"./base.js\";\nimport { Children } from \"./children.js\";\nimport { ErrorBoundary } from \"./components.js\";\nimport { createContext, useContext } from \"./context.js\";\nimport { useActionState, useOptimistic } from \"./dom/hooks/index.js\";\nimport {\n  createRef,\n  forwardRef,\n  startTransition,\n  startViewTransition,\n  use,\n  useCallback,\n  useDebugValue,\n  useDeferredValue,\n  useEffect,\n  useId,\n  useImperativeHandle,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  useTransition,\n  useViewTransition\n} from \"./hooks/index.js\";\nimport { Suspense } from \"./streaming.js\";\nvar jsx_default = {\n  version: reactAPICompatVersion,\n  memo,\n  Fragment,\n  StrictMode: Fragment,\n  isValidElement,\n  createElement: jsx,\n  cloneElement,\n  ErrorBoundary,\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  useReducer,\n  useId,\n  useDebugValue,\n  use,\n  startTransition,\n  useTransition,\n  useDeferredValue,\n  startViewTransition,\n  useViewTransition,\n  useMemo,\n  useLayoutEffect,\n  useInsertionEffect,\n  createRef,\n  forwardRef,\n  useImperativeHandle,\n  useSyncExternalStore,\n  useActionState,\n  useOptimistic,\n  Suspense,\n  Children\n};\nexport {\n  Children,\n  ErrorBoundary,\n  Fragment,\n  Fragment as StrictMode,\n  Suspense,\n  cloneElement,\n  createContext,\n  jsx as createElement,\n  createRef,\n  jsx_default as default,\n  forwardRef,\n  isValidElement,\n  jsx,\n  memo,\n  startTransition,\n  startViewTransition,\n  use,\n  useActionState,\n  useCallback,\n  useContext,\n  useDebugValue,\n  useDeferredValue,\n  useEffect,\n  useId,\n  useImperativeHandle,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useOptimistic,\n  useReducer,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  useTransition,\n  useViewTransition,\n  reactAPICompatVersion as version\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAI,uBAAuB;AAC3B,IAAI,mBAAmB,OAAO,aAAa;AACzC,MAAI;AACF,WAAO,SAAS,KAAK,EAAE,IAAI,CAAC,MAAM,KAAK,QAAQ,OAAO,MAAM,YAAY,KAAK,EAAE,SAAS,CAAC;AAAA,EAC3F,SAAS,GAAG;AACV,QAAI,aAAa,SAAS;AACxB,YAAM;AACN,aAAO,iBAAiB,QAAQ;AAAA,IAClC,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF;AACF;AACA,IAAIA,iBAAgB,OAAO,EAAE,UAAU,UAAU,gBAAgB,QAAQ,MAAM;AAC7E,MAAI,CAAC,UAAU;AACb,WAAO,IAAI,EAAE;AAAA,EACf;AACA,MAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5B,eAAW,CAAC,QAAQ;AAAA,EACtB;AACA,MAAI;AACJ,QAAM,cAAc,CAAC,UAAU;AAC7B,cAAU,KAAK;AACf,YAAQ,eAAe,iBAAiB,KAAK,KAAK,IAAI,SAAS;AAAA,EACjE;AACA,MAAI,WAAW,CAAC;AAChB,MAAI;AACF,eAAW,SAAS;AAAA,MAClB,CAAC,MAAM,KAAK,QAAQ,OAAO,MAAM,YAAY,KAAK,EAAE,SAAS;AAAA,IAC/D;AAAA,EACF,SAAS,GAAG;AACV,kBAAc,MAAM,UAAU,SAAS;AACvC,QAAI,aAAa,SAAS;AACxB,iBAAW;AAAA,QACT,EAAE,KAAK,MAAM,iBAAiB,QAAQ,CAAC,EAAE,MAAM,CAAC,OAAO,YAAY,EAAE,CAAC;AAAA,MACxE;AAAA,IACF,OAAO;AACL,iBAAW,CAAC,YAAY,CAAC,CAAC;AAAA,IAC5B;AAAA,EACF;AACA,MAAI,SAAS,KAAK,CAAC,QAAQ,eAAe,OAAO,GAAG;AAClD,oBAAgB,MAAM,UAAU,SAAS;AACzC,UAAM,QAAQ;AACd,UAAM,YAAY,OAAO,oBAAoB,KAAK,gCAAgC,KAAK,MAAM;AAC7F,UAAM,SAAS;AACf,UAAM,gBAAgB,CAAC,EAAE,OAAO,QAAQ,OAAO,MAAM;AACnD,UAAI,QAAQ;AACV,eAAO;AAAA,MACT;AACA,YAAM,oBAAoB,YAAY,MAAM;AAC5C,UAAI,QAAQ;AACV,eAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,WAAW,iBAAiB;AAAA,MAC5D;AACA,aAAO,SAAS,KAAK,iCAAiC,KAAK,KAAK,iBAAiB;AAAA;AAAA;AAAA,wBAG/D,KAAK;AAAA;AAAA,qEAEwC,KAAK;AAAA;AAAA;AAAA;AAAA,IAItE;AACA,QAAI;AACJ,UAAM,aAAa,QAAQ,IAAI,QAAQ,EAAE,MAAM,CAAC,MAAM,QAAQ,CAAC;AAC/D,WAAO,IAAI,mBAAmB,KAAK,sBAAsB,KAAK,OAAO;AAAA,MACnE,CAAC,EAAE,OAAO,QAAQ,QAAQ,MAAM;AAC9B,YAAI,UAAU,yBAAyB,cAAc;AACnD;AAAA,QACF;AACA,eAAO,WAAW,KAAK,OAAO,cAAc;AAC1C,cAAI,OAAO;AACT,kBAAM;AAAA,UACR;AACA,sBAAY,UAAU,KAAK;AAC3B,gBAAM,UAAU,UAAU,KAAK,EAAE;AACjC,cAAI,OAAO,SAAS,KAAK,iCAAiC,KAAK,KAAK,OAAO;AAAA;AAAA;AAAA,wBAG7D,KAAK;AAAA;AAAA;AAAA;AAAA;AAKnB,cAAI,UAAU,MAAM,CAAC,UAAU,CAAC,MAAM,WAAW,MAAM,GAAG;AACxD,gBAAI,QAAQ;AACV,qBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,WAAW,OAAO;AAAA,YAClD;AACA,mBAAO;AAAA,UACT;AACA,cAAI,QAAQ;AACV,mBAAO,CAAC,IAAI,OAAO,CAAC,EAAE;AAAA,cACpB;AAAA,cACA,CAAC,MAAM,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,IAAI;AAAA,YACjD;AAAA,UACF;AACA,gBAAM,YAAY,UAAU,IAAI,CAAC,UAAU,MAAM,aAAa,CAAC,CAAC,EAAE,KAAK;AACvE,cAAI,UAAU,yBAAyB,QAAQ;AAC7C,mBAAO,MAAM;AAAA,cACX;AAAA,cACA,yBAAyB;AAAA,cACzB;AAAA,cACA;AAAA,YACF;AAAA,UACF;AACA,cAAI,gBAAgB;AACpB,gBAAM,WAAW,UAAU;AAAA,YACzB,CAAC,MAAM,IAAI,SAAS,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC,aAAa;AACjD;AACA,kBAAI,QAAQ;AACV,oBAAI,kBAAkB,UAAU,QAAQ;AACtC,yBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,WAAW,CAAC,MAAM,MAAM,aAAa,QAAQ;AAAA,gBAC7E;AACA,uBAAO,CAAC,KAAK;AACb,uBAAO,IAAI,IAAI,SAAS,SAAS;AAAA,cACnC;AACA,qBAAO;AAAA,gBACL,YAAY,kBAAkB,UAAU,SAAS,KAAK;AAAA;AAAA,wBAE9C,KAAK;AAAA;AAAA;AAAA,uCAGU,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,gBAK5B,SAAS;AAAA,cACX;AAAA,YACF,CAAC,EAAE,MAAM,CAAC,WAAW,cAAc,EAAE,OAAO,QAAQ,OAAO,CAAC,CAAC;AAAA,UAC/D;AACA,iBAAO,IAAI,MAAM,QAAQ;AAAA,QAC3B,CAAC,EAAE,MAAM,CAAC,WAAW,cAAc,EAAE,OAAO,QAAQ,OAAO,CAAC,CAAC;AAAA,MAC/D;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL,WAAO,IAAI,SAAS,KAAK,EAAE,CAAC;AAAA,EAC9B;AACF;AACAA,eAAc,YAAY,IAAI;;;ACxI9B,IAAI,kBAAkB;AACtB,IAAIC,YAAW,OAAO;AAAA,EACpB;AAAA,EACA;AACF,MAAM;AACJ,MAAI,CAAC,UAAU;AACb,WAAO,SAAS,SAAS;AAAA,EAC3B;AACA,MAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5B,eAAW,CAAC,QAAQ;AAAA,EACtB;AACA,MAAI,WAAW,CAAC;AAChB,QAAM,YAAY,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACzC,QAAM,eAAe,CAAC,UAAU;AAC9B,mBAAe,IAAI;AACnB,WAAO;AAAA,EACT;AACA,MAAI;AACF,cAAU,SAAS,EAAE,CAAC,IAAI;AAC1B,mBAAe,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;AACnC,eAAW,SAAS;AAAA,MAClB,CAAC,MAAM,KAAK,QAAQ,OAAO,MAAM,YAAY,KAAK,EAAE,SAAS;AAAA,IAC/D;AAAA,EACF,SAAS,GAAG;AACV,QAAI,aAAa,SAAS;AACxB,iBAAW;AAAA,QACT,EAAE,KAAK,MAAM;AACX,oBAAU,SAAS,EAAE,CAAC,IAAI;AAC1B,yBAAe,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;AACnC,iBAAO,iBAAiB,QAAQ,EAAE,KAAK,YAAY;AAAA,QACrD,CAAC;AAAA,MACH;AAAA,IACF,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF,UAAE;AACA,iBAAa;AAAA,EACf;AACA,MAAI,SAAS,KAAK,CAAC,QAAQ,eAAe,OAAO,GAAG;AAClD,UAAM,QAAQ;AACd,UAAM,cAAc,MAAM,SAAS,SAAS;AAC5C,WAAO,IAAI,mBAAmB,KAAK,gBAAgB,WAAW,aAAa;AAAA,MACzE,GAAG,YAAY,aAAa,CAAC;AAAA,MAC7B,CAAC,EAAE,OAAO,QAAQ,QAAQ,MAAM;AAC9B,YAAI,UAAU,yBAAyB,cAAc;AACnD;AAAA,QACF;AACA,eAAO,QAAQ,IAAI,QAAQ,EAAE,KAAK,OAAO,cAAc;AACrD,sBAAY,UAAU,KAAK;AAC3B,gBAAM,UAAU,UAAU,KAAK,EAAE;AACjC,cAAI,QAAQ;AACV,mBAAO,CAAC,IAAI,OAAO,CAAC,EAAE;AAAA,cACpB,IAAI,OAAO,mBAAmB,KAAK,6BAA6B;AAAA,cAChE;AAAA,YACF;AAAA,UACF;AACA,cAAI,OAAO,SAAS,KAAK,iCAAiC,KAAK,KAAK,OAAO;AAAA;AAAA;AAAA,wBAG7D,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnB,gBAAM,YAAY,UAAU,IAAI,CAAC,UAAU,MAAM,aAAa,CAAC,CAAC,EAAE,KAAK;AACvE,cAAI,CAAC,UAAU,QAAQ;AACrB,mBAAO;AAAA,UACT;AACA,cAAI,UAAU,yBAAyB,QAAQ;AAC7C,mBAAO,MAAM,gBAAgB,MAAM,yBAAyB,cAAc,MAAM,OAAO;AAAA,UACzF;AACA,iBAAO,IAAI,MAAM,SAAS;AAAA,QAC5B,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL,WAAO,IAAI,SAAS,KAAK,EAAE,CAAC;AAAA,EAC9B;AACF;AACAA,UAAS,YAAY,IAAI;AACzB,IAAI,cAAc,IAAI,YAAY;;;AC5DlC,IAAI,cAAc;AAAA,EAChB,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,EACf;AAAA,EACA,eAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAAC;AAAA,EACA;AACF;",
  "names": ["ErrorBoundary", "Suspense", "ErrorBoundary", "Suspense"]
}
