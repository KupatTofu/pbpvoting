{
  "version": 3,
  "sources": ["../../hono/dist/jsx/dom/index.js"],
  "sourcesContent": ["// src/jsx/dom/index.ts\nimport { isValidElement, reactAPICompatVersion, shallowEqual } from \"../base.js\";\nimport { Children } from \"../children.js\";\nimport { DOM_MEMO } from \"../constants.js\";\nimport { useContext } from \"../context.js\";\nimport {\n  createRef,\n  forwardRef,\n  startTransition,\n  startViewTransition,\n  use,\n  useCallback,\n  useDebugValue,\n  useDeferredValue,\n  useEffect,\n  useId,\n  useImperativeHandle,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  useTransition,\n  useViewTransition\n} from \"../hooks/index.js\";\nimport { ErrorBoundary, Suspense } from \"./components.js\";\nimport { createContext } from \"./context.js\";\nimport { useActionState, useFormStatus, useOptimistic } from \"./hooks/index.js\";\nimport { Fragment, jsx } from \"./jsx-runtime.js\";\nimport { createPortal, flushSync } from \"./render.js\";\nimport { render } from \"./render.js\";\nvar createElement = (tag, props, ...children) => {\n  const jsxProps = props ? { ...props } : {};\n  if (children.length) {\n    jsxProps.children = children.length === 1 ? children[0] : children;\n  }\n  let key = void 0;\n  if (\"key\" in jsxProps) {\n    key = jsxProps.key;\n    delete jsxProps.key;\n  }\n  return jsx(tag, jsxProps, key);\n};\nvar cloneElement = (element, props, ...children) => {\n  return jsx(\n    element.tag,\n    {\n      ...element.props,\n      ...props,\n      children: children.length ? children : element.props.children\n    },\n    element.key\n  );\n};\nvar memo = (component, propsAreEqual = shallowEqual) => {\n  const wrapper = (props) => component(props);\n  wrapper[DOM_MEMO] = propsAreEqual;\n  return wrapper;\n};\nvar dom_default = {\n  version: reactAPICompatVersion,\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  use,\n  startTransition,\n  useTransition,\n  useDeferredValue,\n  startViewTransition,\n  useViewTransition,\n  useMemo,\n  useLayoutEffect,\n  useInsertionEffect,\n  useReducer,\n  useId,\n  useDebugValue,\n  createRef,\n  forwardRef,\n  useImperativeHandle,\n  useSyncExternalStore,\n  useFormStatus,\n  useActionState,\n  useOptimistic,\n  Suspense,\n  ErrorBoundary,\n  createContext,\n  useContext,\n  memo,\n  isValidElement,\n  createElement,\n  cloneElement,\n  Children,\n  Fragment,\n  StrictMode: Fragment,\n  flushSync,\n  createPortal\n};\nexport {\n  Children,\n  ErrorBoundary,\n  Fragment,\n  Fragment as StrictMode,\n  Suspense,\n  cloneElement,\n  createContext,\n  createElement,\n  createPortal,\n  createRef,\n  dom_default as default,\n  flushSync,\n  forwardRef,\n  isValidElement,\n  createElement as jsx,\n  memo,\n  render,\n  startTransition,\n  startViewTransition,\n  use,\n  useActionState,\n  useCallback,\n  useContext,\n  useDebugValue,\n  useDeferredValue,\n  useEffect,\n  useFormStatus,\n  useId,\n  useImperativeHandle,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useOptimistic,\n  useReducer,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  useTransition,\n  useViewTransition,\n  reactAPICompatVersion as version\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,IAAI,gBAAgB,CAAC,KAAK,UAAU,aAAa;AAC/C,QAAM,WAAW,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC;AACzC,MAAI,SAAS,QAAQ;AACnB,aAAS,WAAW,SAAS,WAAW,IAAI,SAAS,CAAC,IAAI;AAAA,EAC5D;AACA,MAAI,MAAM;AACV,MAAI,SAAS,UAAU;AACrB,UAAM,SAAS;AACf,WAAO,SAAS;AAAA,EAClB;AACA,SAAO,OAAI,KAAK,UAAU,GAAG;AAC/B;AACA,IAAI,eAAe,CAAC,SAAS,UAAU,aAAa;AAClD,SAAO;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,MACE,GAAG,QAAQ;AAAA,MACX,GAAG;AAAA,MACH,UAAU,SAAS,SAAS,WAAW,QAAQ,MAAM;AAAA,IACvD;AAAA,IACA,QAAQ;AAAA,EACV;AACF;AACA,IAAI,OAAO,CAAC,WAAW,gBAAgB,iBAAiB;AACtD,QAAM,UAAU,CAAC,UAAU,UAAU,KAAK;AAC1C,UAAQ,QAAQ,IAAI;AACpB,SAAO;AACT;AACA,IAAI,cAAc;AAAA,EAChB,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA;AACF;",
  "names": []
}
